/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/check': RouteRecordInfo<'/check', '/check', Record<never, never>, Record<never, never>>,
    '/login': RouteRecordInfo<'/login', '/login', Record<never, never>, Record<never, never>>,
    '/monitor': RouteRecordInfo<'/monitor', '/monitor', Record<never, never>, Record<never, never>>,
    '/param': RouteRecordInfo<'/param', '/param', Record<never, never>, Record<never, never>>,
    '/personal-settings': RouteRecordInfo<'/personal-settings', '/personal-settings', Record<never, never>, Record<never, never>>,
    '/plan-task': RouteRecordInfo<'/plan-task', '/plan-task', Record<never, never>, Record<never, never>>,
    '/source': RouteRecordInfo<'/source', '/source', Record<never, never>, Record<never, never>>,
    '/system-info': RouteRecordInfo<'/system-info', '/system-info', Record<never, never>, Record<never, never>>,
    '/table': RouteRecordInfo<'/table', '/table', Record<never, never>, Record<never, never>>,
    '/task': RouteRecordInfo<'/task', '/task', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/views/index.vue': {
      routes: '/'
      views: never
    }
    'src/views/check.vue': {
      routes: '/check'
      views: never
    }
    'src/views/login.vue': {
      routes: '/login'
      views: never
    }
    'src/views/monitor.vue': {
      routes: '/monitor'
      views: never
    }
    'src/views/param.vue': {
      routes: '/param'
      views: never
    }
    'src/views/personal-settings.vue': {
      routes: '/personal-settings'
      views: never
    }
    'src/views/plan-task.vue': {
      routes: '/plan-task'
      views: never
    }
    'src/views/source.vue': {
      routes: '/source'
      views: never
    }
    'src/views/system-info.vue': {
      routes: '/system-info'
      views: never
    }
    'src/views/table.vue': {
      routes: '/table'
      views: never
    }
    'src/views/task.vue': {
      routes: '/task'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
